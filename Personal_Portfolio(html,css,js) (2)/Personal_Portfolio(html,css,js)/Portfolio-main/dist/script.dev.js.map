{"version":3,"sources":["script.js"],"names":["themeToggle","document","getElementById","isDarkMode","localStorage","getItem","body","classList","add","addEventListener","toggle","setItem"],"mappings":";;AAAA;AACA,IAAMA,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB,C,CAEA;;AACA,IAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,MAAvD,C,CAEA;;AACA,IAAIF,UAAJ,EAAgB;AACZF,EAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,WAA5B;AACH,C,CAED;;;AACAR,WAAW,CAACS,gBAAZ,CAA6B,OAA7B,EAAsC,YAAM;AACxCR,EAAAA,QAAQ,CAACK,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,WAA/B;AACAP,EAAAA,UAAU,GAAG,CAACA,UAAd,CAFwC,CAIxC;;AACAC,EAAAA,YAAY,CAACO,OAAb,CAAqB,WAArB,EAAkCR,UAAlC;AACH,CAND","sourcesContent":["// Selecting the bulb icon and setting up the event listener\r\nconst themeToggle = document.getElementById('theme-icon');\r\n\r\n// Check for previously stored theme preference in local storage\r\nlet isDarkMode = localStorage.getItem('dark-mode') === 'true';\r\n\r\n// Apply initial theme based on preference\r\nif (isDarkMode) {\r\n    document.body.classList.add('dark-mode');\r\n}\r\n\r\n// Event listener for the theme toggle\r\nthemeToggle.addEventListener('click', () => {\r\n    document.body.classList.toggle('dark-mode');\r\n    isDarkMode = !isDarkMode;\r\n\r\n    // Store the user's preference in local storage\r\n    localStorage.setItem('dark-mode', isDarkMode);\r\n});\r\n"],"file":"script.dev.js"}